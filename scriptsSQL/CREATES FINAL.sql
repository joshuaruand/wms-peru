--1
CREATE TABLE ALMACEN(
	ID_ALMACEN INTEGER PRIMARY KEY,
	TIPO_ALMACEN VARCHAR(40),
	DIRECCION_ALMACEN VARCHAR(20) unique
);

--2
CREATE TABLE TIPO_ESTANTE(
	ID_TIPO_ESTANTE INTEGER PRIMARY KEY,
	COLOR_ESTANTE VARCHAR(40)
);

CREATE TABLE ESTANTE(
	ID_ESTANTE SERIAL PRIMARY KEY,
	NUMERO_PASILLO INTEGER,
	ID_TIPO_ESTANTE INTEGER,
	ID_ALMACEN INTEGER, 
	foreign key (ID_TIPO_ESTANTE) references TIPO_ESTANTE (ID_TIPO_ESTANTE) on delete cascade,
	foreign key (ID_ALMACEN) REFERENCES ALMACEN (ID_ALMACEN) on delete cascade
);

--3
CREATE TABLE TIPO_ESPACIO(
	ID_TIPO_ESPACIO INTEGER PRIMARY KEY,
	TALLA_ESPACIO VARCHAR(40),
	CAPACIDAD INTEGER
);

CREATE TABLE ESPACIO(
	ID_ESPACIO SERIAL primary KEY,
	ESTADO_ESPACIO VARCHAR(20) default 'VACIO',
	NUMERO_FILA INTEGER,
	NUMERO_COLUMNA INTEGER,
	ID_TIPO_ESPACIO INTEGER,
	ID_ESTANTE INTEGER,
	foreign key (ID_TIPO_ESPACIO) references TIPO_ESPACIO (ID_TIPO_ESPACIO) on delete CASCADE,
	foreign key (ID_ESTANTE) REFERENCES ESTANTE (ID_ESTANTE) on delete cascade,
	unique (NUMERO_FILA,NUMERO_COLUMNA,ID_ESTANTE)
);

--4
CREATE TABLE BIEN(
	ID_BIEN SERIAL PRIMARY KEY,
	ESTADO_BIEN VARCHAR(20),
	PESO_BIEN NUMERIC(9,2),
	COLOR_BIEN VARCHAR(20),
	ID_ESPACIO INTEGER,
	foreign key (ID_ESPACIO) REFERENCES ESPACIO(ID_ESPACIO) on delete CASCADE
);


--8
CREATE TABLE ROLLO_TELA(
	ID_BIEN INTEGER PRIMARY KEY,
	GROSOR_TELA INTEGER,
	TIPO_TELA VARCHAR(40),
	PRECIO_TELA NUMERIC(6,2),
	RESISTENCIA_TRACCION NUMERIC(9,2),
	CANTIDAD_TELAS INTEGER,
	foreign key (ID_BIEN) REFERENCES BIEN(ID_BIEN) on delete CASCADE
);

--5
create table TIPO_LOTE(
	ID_TIPO_LOTE INTEGER primary key,
	MATERIAL_LOTE VARCHAR(40)
);

CREATE TABLE LOTE(
	ID_LOTE SERIAL PRIMARY KEY,
	ID_TIPO_LOTE INTEGER,
	foreign key (ID_TIPO_LOTE) references TIPO_LOTE(ID_TIPO_LOTE) on delete CASCADE
);

--6
create table TIPO_PAQUETE(
	ID_TIPO_PAQUETE INTEGER primary key,
	MATERIAL_PAQUETE VARCHAR(40)
);

CREATE TABLE PAQUETE(
	ID_PAQUETE SERIAL PRIMARY KEY,
	ID_TIPO_PAQUETE INTEGER,
	ID_LOTE INTEGER,
	foreign key (ID_TIPO_PAQUETE) references TIPO_PAQUETE(ID_TIPO_PAQUETE) on delete cascade,
	foreign key (ID_LOTE) REFERENCES LOTE(ID_LOTE) on delete cascade
);


--7
CREATE TABLE POLO(
	ID_BIEN INTEGER PRIMARY key,
	TIPO_DISENO VARCHAR(20),
	TIPO_CUELLO VARCHAR(20),
	TIPO_MANGA VARCHAR(20),
	TIPO_TALLA VARCHAR(20),
	ID_PAQUETE INTEGER not NULL,
	CANTIDAD_POLOS INTEGER,
	foreign key (ID_BIEN) REFERENCES BIEN(ID_BIEN) on delete CASCADE,
	foreign key (ID_PAQUETE) REFERENCES PAQUETE(ID_PAQUETE) on delete cascade
);


CREATE TABLE TIPO_USUARIO(
	ID_TIPO_USUARIO INTEGER PRIMARY KEY,
	DESCRIPCION VARCHAR(40)
);
--9
CREATE TABLE USUARIO(
	ID_USUARIO SERIAL PRIMARY KEY NOT NULL,
	DNI_USUARIO VARCHAR(8) NOT NULL,
	NOMBRES_USUARIO VARCHAR(20) NOT NULL,
	APELLIDOS_USUARIO VARCHAR(20) NOT NULL,
	ID_TIPO_USUARIO INTEGER ,
	CONTRASENA_USUARIO VARCHAR(20) NOT NULL,
	ID_ALMACEN INTEGER,
	foreign key (ID_TIPO_USUARIO) REFERENCES TIPO_USUARIO(ID_TIPO_USUARIO) ON DELETE cascade,
	foreign key (ID_ALMACEN) REFERENCES ALMACEN(ID_ALMACEN) on delete cascade
);


--10
CREATE TABLE TELF_USUARIO(
	TELEFONO_USUARIO VARCHAR(10) NOT NULL,
	ID_USUARIO INTEGER NOT NULL,
	PRIMARY KEY (ID_USUARIO, TELEFONO_USUARIO),
	FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO (ID_USUARIO) on delete CASCADE
);

--11
CREATE TABLE CORREOS_USUARIO (
	CORREO_USUARIO VARCHAR(40) NOT NULL,
	ID_USUARIO INTEGER NOT NULL,
	PRIMARY KEY (ID_USUARIO, CORREO_USUARIO),
	FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO (ID_USUARIO) on delete CASCADE
);

--12
CREATE TABLE CITA (
	ID_CITA SERIAL PRIMARY KEY NOT NULL,
	TIPO_CITA VARCHAR(20) NOT NULL,
	FECHA_CITA DATE NOT null,
	HORA_CITA TIME NOT null,
	ID_ALMACEN INTEGER,
	NOMBRE_CLIENTE VARCHAR(20) NOT NULL,
	DOCUMENTO_CLIENTE VARCHAR(8) NOT NULL,
	foreign key (ID_ALMACEN) REFERENCES ALMACEN(ID_ALMACEN) on delete CASCADE
);

--13.1
CREATE TABLE ORDEN (
	ID_ORDEN SERIAL PRIMARY KEY NOT NULL,
	TIPO_ORDEN VARCHAR(20) NOT NULL,
	FECHA_ORDEN DATE NOT null default CURRENT_DATE,
	HORA_ORDEN TIME NOT null default CURRENT_TIME,
	ID_CITA INTEGER,
	ID_USUARIO INTEGER,
	foreign key (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO) on delete cascade,
	foreign key(ID_CITA) REFERENCES CITA(ID_CITA) on delete cascade
);

--13.2
create TABLE MOV_MERCADERIA(
	ID_MOVIMIENTO SERIAL,
	TIPO_MOVIMIENTO VARCHAR(20) NOT NULL,
	ID_ORDEN INTEGER,
	ID_BIEN INTEGER,
	PRIMARY KEY (ID_MOVIMIENTO, ID_ORDEN),
	foreign key (ID_ORDEN) REFERENCES ORDEN(ID_ORDEN) on delete cascade,
	foreign key (ID_BIEN) REFERENCES BIEN(ID_BIEN) on delete cascade
);


--14
CREATE TABLE ALBARAN (
	ID_ALBARAN SERIAL PRIMARY KEY,
	TIPO_ALBARAN VARCHAR (20) NOT NULL,
	TITULO_ALBARAN VARCHAR (100) NOT NULL,
	FECHA_ALBARAN DATE NOT null default CURRENT_DATE,
	HORA_ALBARAN TIME NOT null default CURRENT_TIME,
	ID_USUARIO INTEGER,
	foreign key (ID_USUARIO) REFERENCES USUARIO (ID_USUARIO) on delete cascade
);


--15
CREATE TABLE SELECCION (
	ID_BIEN INTEGER,
	ID_ALBARAN INTEGER,
	PRIMARY KEY (ID_BIEN, ID_ALBARAN),
	FOREIGN KEY (ID_BIEN) REFERENCES BIEN (ID_BIEN) on delete CASCADE,
	FOREIGN KEY (ID_ALBARAN) REFERENCES ALBARAN (ID_ALBARAN) on delete CASCADE
);

--16
CREATE TABLE ACCESO(
	ID_USUARIO INTEGER,
	ID_ALBARAN INTEGER,
	FECHA_ACCESO DATE NOT null default CURRENT_DATE,
	HORA_ACCESO TIME NOT null default CURRENT_TIME,
	PRIMARY KEY (ID_USUARIO, ID_ALBARAN),
	FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO (ID_USUARIO) on delete CASCADE,
	FOREIGN KEY (ID_ALBARAN) REFERENCES ALBARAN (ID_ALBARAN) on delete CASCADE
);

--17
CREATE TABLE NOTIFICACION (
	ID_NOTIFICACION SERIAL PRIMARY KEY,
	TIPO_NOTIFICACION VARCHAR (20) NOT NULL,
	TITULO_NOTIFICACION VARCHAR (100) NOT NULL,
	DETALLE_NOTIFICACION VARCHAR,
	FECHA_NOTIFICACION DATE NOT null default CURRENT_DATE,
	HORA_NOTIFICACION TIME NOT null default CURRENT_TIME,
	ID_USUARIO INTEGER,
	foreign key (ID_USUARIO) REFERENCES USUARIO (ID_USUARIO) on delete cascade
);

--18
CREATE TABLE RECEPCION_NOTIFICACION(
	ID_USUARIO INTEGER,
	ID_NOTIFICACION INTEGER,
	HORA_RECEPCION_NOTIFICACION TIME NOT null default CURRENT_TIME,
	PRIMARY KEY (ID_USUARIO, ID_NOTIFICACION),
	FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO (ID_USUARIO) on delete CASCADE,
	FOREIGN KEY (ID_NOTIFICACION) REFERENCES NOTIFICACION (ID_NOTIFICACION) on delete CASCADE
);

